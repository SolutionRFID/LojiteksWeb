@{
    ViewData["Title"] = "Sevkiyatlar ";
    ViewData["Desc"] = "Sevkiyatlar ";
    ViewBag.pTitle = "Sevkiyatlar";
    ViewBag.pageTitle = "Raporlar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
  <div class="col-12">
    <div class="card">
      <div class="card-body">
        <h4 class="card-title" data-key="t-shipment-list">Sevkiyat Listesi</h4>
        <p class="card-title-desc"></p>
        <div id="datatable-buttons_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer">
          <div class="row">
            <!-- Butonlar -->
            <div class="col-sm-12 col-md-6">
                <!-- Butonlar buraya eklenmeli -->
            </div>
            <!-- Arama Kutusu -->
          </div>
          <!-- Tablo -->
          <div class="row">
            <div class="col-sm-12">
              <table id="datatable-buttons" class="table table-bordered dt-responsive nowrap w-100 dataTable no-footer">
                <thead>
                  <tr>
                    <th data-key="t-po">PO</th>
                    <th data-key="t-shipment-quantity">Sevkiyat Adeti</th>
                    <th data-key="t-shipment-date">Sevkiyat Tarihi</th>
                    <th data-key="t-description">Açıklama</th>
                    <th data-key="t-customer">Musteri</th>
                    <th data-key="t-progress" style="width: 30%;">ilerleme Durumu</th>
                    <th data-key="t-status">Durum</th>

                    <th data-key="t-actions">İşlemler</th>
                  </tr>
                </thead>
                <tbody>
                </tbody>
              </table>
            </div>
          </div>
          <!-- Bilgi ve Sayfalama -->
        </div>
      </div> <!-- end card-body -->
    </div> <!-- end card -->
  </div> <!-- end col-12 -->
</div>


@section scripts {
    <script src="~/assets/js/app.js"></script>
    <script>

            // Önce dil dosyasını yükle
            $.getJSON(`/assets/lang/${localStorage.getItem('language') || 'tr'}.json`, function (lang) {


                        console.log("Dil JSON Verisi:", lang); // JSON'un yüklendiğini kontrol et
                        console.log("DataTable JSON:", lang.datatable);

        if (!lang || !lang.datatable) {
            console.error("Dil dosyası hatalı veya eksik! DataTable çevirileri yüklenemedi.");
            return;
        }

                var table = $('#datatable-buttons').DataTable({
                    "language": {
                        "search": lang.datatable["t-search"] || "Search:",
                        "lengthMenu": lang.datatable["t-lengthMenu"] || "Show _MENU_ records per page",
                        "info": lang.datatable["t-info"] || "Showing _START_ to _END_ of _TOTAL_ records",
                        "infoEmpty": lang.datatable["t-infoEmpty"] || "No records to show",
                        "infoFiltered": lang.datatable["t-infoFiltered"] || "(filtered from _MAX_ total records)",
                        "zeroRecords": lang.datatable["t-zeroRecords"] || "No matching records found",
                        "paginate": {
                            "first": lang.datatable.paginate["first"] || "First",
                            "last": lang.datatable.paginate["last"] || "Last",
                            "next": lang.datatable.paginate["next"] || "Next",
                            "previous": lang.datatable.paginate["previous"] || "Previous"
                        }
                    },
                    ajax: {
                        url: '/api/GetShipments',
                        type: 'POST',
                        dataSrc: 'data'
                    },
                    columns: [
                        { data: 'po', defaultContent: "" },
                        { data: 'adet', defaultContent: "" },
                        { data: 'gonderimTarihi', defaultContent: "" },
                        { data: 'aciklama', defaultContent: "" },
                        { data: 'musteri', defaultContent: "" },
                        {
                            data: 'durum', // 📌 Durum değeri adete göre ilerleme çubuğuna çevrilecek
                            defaultContent: "",
                            orderable: false,
                            render: function (data, type, row) {
                                let adet = row.adet || 1; // 📌 `adet` sıfır olursa hata olmaması için varsayılan `1`
                                let progress = Math.min(Math.round((data / adet) * 100), 100); // 📌 Yüzde hesaplama (max 100%)
                                return `
                                <div>
                                <div class="progress position-relative" style="height: 30px; font-size: 20px;">
                                    <div class="progress-bar bg-success" role="progressbar"
                                        style="width: ${progress}%; height: 100%; "
                                        aria-valuenow="${progress}" aria-valuemin="0" aria-valuemax="100">
                                    </div>
                                    <span class="progress-text">${progress}%</span>
                                </div>`;
                            }
                        },
                        {
                            data: 'sil',
                            defaultContent: "",
                            orderable: false,
                            render: function (data, type, row) {
                                if (data === true) {
                                     return `<button type="button" class="btn btn-danger waves-effect waves-light" disabled ><b data-key="t-closed">Kapalı</b></button>`;
                                    
                                } else {
                                   return `<button type="button" class="btn btn-success waves-effect waves-light" disabled ><b data-key="t-open">Açık</b></button>`;
                                }
                            }
                        },
                        {
                            data: 'bid',
                            defaultContent: "",
                            orderable: false,
                            render: function (data, type, row) {
                                return `
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-success waves-effect waves-light details-btn" data-id="${data}">
                                            <i class="bx bx-search-alt font-size-17 align-middle me-2"></i>
                                            <b data-key="t-details2">"Ayrıntılar"</b>
                                        </button>
                                        <button type="button" class="btn btn-danger waves-effect waves-light delete-btn" data-id="${data}">
                                            <i class="bx bxs-trash font-size-17 align-middle me-2"></i>
                                            <b data-key="t-delete">"Sil"</b>
                                        </button>
                                    </div>
                                `;
                            }
                        }
                    ],
                    lengthChange: false,
                    dom: 'Bfrtip',
                    buttons: [
                        { extend: 'copy', text: lang.buttons["t-copy"] || 'Copy' },
                        { extend: 'excel', text: lang.buttons["t-excel"] || 'Excel' },
                        { extend: 'pdf', text: lang.buttons["t-pdf"] || 'PDF' },
                    ],
                    initComplete: function () {
                        table.buttons().container().appendTo('#datatable-buttons_wrapper .col-md-6:eq(0)');

                        $('.col-md-6:eq(0)').after(`
                            <div class="col-sm-12 col-md-6 text-end">
                                <button id="NewShipmentButton" class="btn btn-primary">
                                    <i class="fas fa-plus"></i>
                                    <b data-key="t-shipment-add">${lang.buttons["t-shipment-add"] || "Yeni Sevkiyat Ekle"}</b>
                                </button>
                            </div>
                            <br><br><br>
                        `);

                        $('#NewShipmentButton').on('click', function () {
                            window.location.href = '/NewShipment';
                        });

                        $('#datatable-buttons tbody').on('click', '.details-btn', function () {
                            var bid = $(this).data("id");
                            window.location.href = '/api/GetShipmentDetails?ShipmentID=' + bid;
                        });

                        // **DataTable tamamlandıktan sonra dil çevirisini uygula**
                        window.getLanguage();
                    }
                });

            }).fail(function () {
                console.error("Dil dosyası yüklenemedi!");
            });


        // Sevkiyat Silme Fonksiyonu
        function deleteShipment(po) {
            $.ajax({
                url: '/api/DeleteShipment?po=' + po,
                type: 'DELETE',
                success: function(response) {
                    alert("Sevkiyat başarıyla silindi!");
                    $('#datatable-buttons').DataTable().ajax.reload(); // Tabloyu güncelle
                },
                error: function(xhr) {
                    alert("Silme işlemi sırasında hata oluştu: " + xhr.responseText);
                }
            });
        }

    </script>


    

    

}

