<!DOCTYPE html>
<html lang="en">

<head>

    @Html.Partial("~/Views/Shared/_title_meta.cshtml")
    @RenderSection("styles", false)
    @Html.Partial("~/Views/Shared/_head_css.cshtml")
</head>

@{
    var viewPath = ViewContext.View.Path;
    var pageName = System.IO.Path.GetFileNameWithoutExtension(viewPath);
}
<body data-sidebar="dark" data-page="@pageName">

    <!-- Preloader Başlangıcı -->
    <div id="preloader"> 
        <div id="status"> 
            <div class="spinner-chase">
                <div class="chase-dot"></div> 
                <div class="chase-dot"></div> 
                <div class="chase-dot"></div> 
                <div class="chase-dot"></div> 
                <div class="chase-dot"></div> 
                <div class="chase-dot"></div>
            </div> 
        </div> 
    </div>
    <!-- Preloader Bitişi -->

    <!-- Begin page -->
    <div id="layout-wrapper">
        @Html.Partial("~/Views/Shared/_topbar.cshtml")
        @Html.Partial("~/Views/Shared/_sidebar.cshtml")

        <!-- ============================================================== -->
        <!-- Start right Content here -->
        <!-- ============================================================== -->

        <div class="main-content">
            <div class="page-content">
                <div class="container-fluid">
                    @Html.Partial("~/Views/Shared/_page_title.cshtml")

                    @RenderBody()
                </div> <!-- container-fluid -->
            </div>
            <!-- End Page-content -->
            @Html.Partial("~/Views/Shared/_footer.cshtml")
        </div>
        <!-- end main content-->

    </div>

    @RenderSection("externalhtml", required: false)

    <!-- END layout-wrapper -->
    @Html.Partial("~/Views/Shared/_right_sidebar.cshtml")

    @Html.Partial("~/Views/Shared/_vendor_scripts.cshtml")

    @RenderSection("scripts", required: false)

    <script>
        let idleTime = 0;

        function resetIdleTimer() {
            idleTime = 0; // Kullanıcı hareket ettiğinde süreyi sıfırla
        }

        function checkIdleTime() {
            idleTime++;
            console.log("Idle Time: " + idleTime + " dk");

            if (idleTime >= 10) { // 10 dakika hareketsizse
                fetch('/Auth/LockScreen', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.href = data.redirectUrl; // Kullanıcıyı kilit ekranına yönlendir
                    }
                })
                .catch(error => console.error('Error:', error));
            }

            if (idleTime >= 120) { // 2 saat hareketsizse tamamen çıkış yap
                fetch('/Auth/Logout', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.href = data.redirectUrl; // Kullanıcıyı çıkış sayfasına yönlendir
                    }
                })
                .catch(error => console.error('Error:', error));
            }
        }

        // Kullanıcının bir şey yapıp yapmadığını kontrol eden event'ler
        window.onload = resetIdleTimer;
        document.onmousemove = resetIdleTimer;
        document.onkeypress = resetIdleTimer;
        document.onclick = resetIdleTimer;
        document.onscroll = resetIdleTimer;

        // 1 dakika (60,000 ms) aralıklarla inaktiviteyi kontrol et
        setInterval(checkIdleTime, 60000);
    </script>

</body>

</html>