@model TBL_Baslik
@{
    ViewData["Title"] = "Report Details";
}

<div class="card fis-header-card">
    <div class="card-body fs-6 py-15 px-10 py-lg-10 px-lg-10 text-gray-700">
        <div class="row justify-content-between mb-5">
            <div class="col-md-4">
                <h2 class="mb-5">
                    @Html.DisplayNameFor(model => model.Aciklama)
                </h2>
                @Html.DisplayFor(model => model.Aciklama)
            </div>
            <div class="col-md-4">
                <h2 class="mb-5">
                    @Html.DisplayNameFor(model => model.SevkiyatAd)
                </h2>
                @Html.DisplayFor(model => model.SevkiyatAd)
            </div>
            <div class="col-md-4">
                <h2 class="mb-5">
                    @Html.DisplayNameFor(model => model.Musteri)
                </h2>
                @Html.DisplayFor(model => model.MusteriID) - 
                @Html.DisplayFor(model => model.Musteri.MusteriAd)
            </div>
        </div>
        <hr class="bg-primary" style="margin-top:50px; margin-bottom:50px;" />
        <div class="table-responsive mt-5 mb-5">
            <table class="table table-row-bordered fis-header-table">
                <thead class="bg-primary text-white">
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.PO_Number)</th>
                        <th>@Html.DisplayNameFor(model => model.Kullanici)</th>
                        <th>Box Count</th>
                        <th>@Html.DisplayNameFor(model => model.GonderiAdedi)</th>
                        <th>@Html.DisplayNameFor(model => model.KayitTarihi)</th>
                        <th>@Html.DisplayNameFor(model => model.GonderimTarihi)</th>

                    </tr>
                </thead>
                <tbody class="border border-secondary">
                    <tr class="text-center">
                        <td>
                            @Html.DisplayFor(model => model.PO_Number)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.Kullanici)
                        </td>
                        <td>
                            @ViewBag.koliCount
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.GonderiAdedi)
                        </td>
                        <td>
                            @Model.KayitTarihi?.ToShortDateString()
                        </td>
                        <td>
                            @Model.GonderimTarihi?.ToShortDateString()
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div class="mb-5">
            <div class="d-md-flex justify-content-between align-items-center">
                <div class="search-container">
                    <input type="text" id="searchBox" class="form-control rounded-pill" placeholder="Search" oninput="searchGrid()">
                </div>
            </div>
        </div>
        <div class="d-flex justify-content-center">
            <div id="indexGrid" style="height: 800px; width:100%;" class="ag-theme-alpine"></div>
        </div>
    </div>
</div>
<div class="mt-3">
    <a class="btn btn-primary" asp-action="Index"><i class="fas fa-arrow-left"></i> Back to List</a>
</div>

@section Scripts {
    <script type="text/javascript">
        var columnDefs = [
            { field: "koliID", headerName: "Box No" },
            { field: "koliBarkod", headerName: "Box Barcode" },
            { field: "epc", headerName: "EPC" },
            { field: "upc", headerName: "Upc" },
            { field: "beden", headerName: "Size" },
            {
                field: "kayitTarihi", headerName: "Record Date",
                valueFormatter: function (params) {
                    if (!params.value) return '';
                    var date = new Date(params.value);
                    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                }
            }
        ];

        var gridOptions = {
            columnDefs: columnDefs,
            defaultColDef: {
                sortable: true,
                resizable: true,
                flex: 1
            },
            rowModelType: 'infinite',
            paginationPageSize: 100,
            cacheBlockSize: 100,
            infiniteInitialRowCount: 1,
            maxBlocksInCache: 1000,
            datasource: {
                getRows: function (params) {
                    var page = Math.floor(params.startRow / gridOptions.paginationPageSize) + 1;
                    var sortModel = params.sortModel.length > 0 ? params.sortModel[0] : { colId: 'KoliID', sort: 'asc' };
                    var filterValue = document.getElementById('searchBox') ? document.getElementById('searchBox').value : '';

                    fetch(`/Rapor/GetEpc?id=${@Model.BaslikID}&page=${page}&pageSize=${gridOptions.paginationPageSize}&sortColumn=${sortModel.colId}&sortOrder=${sortModel.sort}&filter=${filterValue}`)
                        .then(response => response.json())
                        .then(data => {
                            var lastPage = data.length < gridOptions.paginationPageSize;
                            params.successCallback(data, lastPage ? params.startRow + data.length : undefined);
                        })
                        .catch(error => {
                            console.error('Error fetching data: ', error);
                            params.failCallback();
                        });
                }
            }
        };

        function initializeGrid() {
            new agGrid.Grid(document.getElementById('indexGrid'), gridOptions);
        }

        document.addEventListener('DOMContentLoaded', function () {
            initializeGrid();
        });

        function searchGrid() {
            gridOptions.api.setDatasource(gridOptions.datasource);
        }

        function openDeleteModal(cihazID, kod) {
            document.getElementById('cihazID').value = cihazID;
            document.getElementById('kod').innerText = kod;
            var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }
    </script>
}